x-shared_env: &shared_env
  env_file:
    - .env

x-medical-base: &medical-base
  <<: *shared_env
  build:
    context: ./.
    dockerfile: Dockerfile
  volumes:
    - ./.:/app
  depends_on:
    - postgres-medical
    - redis
    - rabbitmq
  restart: always

services:
  postgres-medical:
    image: postgres:15.4
    container_name: postgres-medical
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    <<: *shared_env
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50

  rabbitmq:
    <<: *shared_env
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq-medical
    environment:
      RABBITMQ_VHOSTS: "medical"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq_plugins:/etc/rabbitmq/enabled_plugins
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10

  app-medical:
    <<: *medical-base
    container_name: app_medical
    ports:
      - "8000:8000"
    entrypoint: ["/app/entrypoint.sh"]

  nginx:
    image: nginx:latest
    container_name: nginx-medical
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/loc.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/static
    depends_on:
      - app-medical

  celery_default:
    <<: *medical-base
    container_name: celery_default
    environment:
      - LOCAL_DEBUGGER_RUN=False # обращался на локалхост без этого
    command: [ "sh", "/app/start_celery_worker.sh", "default", "2" ]
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "celery -A medical_mvp inspect ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_beat:
    <<: *medical-base
    container_name: celery_beat
    environment:
      - LOCAL_DEBUGGER_RUN=False
    command: sh -c "uv run celery -A medical_mvp beat -l INFO"
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "ps aux | grep '[c]elery beat'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  flower:
    <<: *medical-base
    container_name: flower
    environment:
      - LOCAL_DEBUGGER_RUN=False
    command: sh ./run_flower.sh
    ports:
      - "9999:9999"

volumes:
  pg_data:
  redis_data:
  rabbitmq_data: