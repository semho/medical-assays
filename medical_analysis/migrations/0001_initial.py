# Generated by Django 5.2.6 on 2025-09-26 15:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalysisSession",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("upload_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("uploading", "Загрузка"),
                            ("processing", "Обработка"),
                            ("completed", "Завершено"),
                            ("error", "Ошибка"),
                        ],
                        default="uploading",
                        max_length=20,
                    ),
                ),
                ("file_deleted_timestamp", models.DateTimeField(blank=True, null=True)),
                (
                    "analysis_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("blood_general", "Общий анализ крови"),
                            ("blood_biochem", "Биохимический анализ"),
                            ("hormones", "Гормональные анализы"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                ("temp_file_path", models.CharField(blank=True, max_length=500)),
                ("error_message", models.TextField(blank=True)),
                ("processing_started", models.DateTimeField(blank=True, null=True)),
                ("processing_completed", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-upload_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="MedicalData",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("encrypted_results", models.TextField(help_text="Зашифрованные результаты анализов")),
                ("analysis_date", models.DateField(help_text="Дата проведения анализа")),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("blood_general", "Общий анализ крови"),
                            ("blood_biochem", "Биохимический анализ"),
                            ("hormones", "Гормональные анализы"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_data",
                        to="medical_analysis.analysissession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Медицинские данные",
                "verbose_name_plural": "Медицинские данные",
                "ordering": ["-analysis_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BloodGeneralAnalysis",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("hemoglobin", models.FloatField(blank=True, help_text="Гемоглобин, г/л", null=True)),
                ("erythrocytes", models.FloatField(blank=True, help_text="Эритроциты, 10¹²/л", null=True)),
                ("hematocrit", models.FloatField(blank=True, help_text="Гематокрит, %", null=True)),
                ("leukocytes", models.FloatField(blank=True, help_text="Лейкоциты, 10⁹/л", null=True)),
                ("platelets", models.FloatField(blank=True, help_text="Тромбоциты, 10⁹/л", null=True)),
                ("esr", models.FloatField(blank=True, help_text="СОЭ, мм/ч", null=True)),
                (
                    "neutrophils_seg",
                    models.FloatField(blank=True, help_text="Нейтрофилы сегментоядерные, %", null=True),
                ),
                (
                    "neutrophils_stab",
                    models.FloatField(blank=True, help_text="Нейтрофилы палочкоядерные, %", null=True),
                ),
                ("lymphocytes", models.FloatField(blank=True, help_text="Лимфоциты, %", null=True)),
                ("monocytes", models.FloatField(blank=True, help_text="Моноциты, %", null=True)),
                ("eosinophils", models.FloatField(blank=True, help_text="Эозинофилы, %", null=True)),
                ("basophils", models.FloatField(blank=True, help_text="Базофилы, %", null=True)),
                (
                    "medical_data",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blood_general",
                        to="medical_analysis.medicaldata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BloodBiochemAnalysis",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("glucose", models.FloatField(blank=True, help_text="Глюкоза, ммоль/л", null=True)),
                ("total_protein", models.FloatField(blank=True, help_text="Общий белок, г/л", null=True)),
                ("albumin", models.FloatField(blank=True, help_text="Альбумин, г/л", null=True)),
                ("urea", models.FloatField(blank=True, help_text="Мочевина, ммоль/л", null=True)),
                ("creatinine", models.FloatField(blank=True, help_text="Креатинин, мкмоль/л", null=True)),
                ("total_bilirubin", models.FloatField(blank=True, help_text="Билирубин общий, мкмоль/л", null=True)),
                ("direct_bilirubin", models.FloatField(blank=True, help_text="Билирубин прямой, мкмоль/л", null=True)),
                ("alt", models.FloatField(blank=True, help_text="АЛТ, Ед/л", null=True)),
                ("ast", models.FloatField(blank=True, help_text="АСТ, Ед/л", null=True)),
                (
                    "alkaline_phosphatase",
                    models.FloatField(blank=True, help_text="Щелочная фосфатаза, Ед/л", null=True),
                ),
                ("total_cholesterol", models.FloatField(blank=True, help_text="Холестерин общий, ммоль/л", null=True)),
                ("hdl_cholesterol", models.FloatField(blank=True, help_text="ЛПВП холестерин, ммоль/л", null=True)),
                ("ldl_cholesterol", models.FloatField(blank=True, help_text="ЛПНП холестерин, ммоль/л", null=True)),
                ("triglycerides", models.FloatField(blank=True, help_text="Триглицериды, ммоль/л", null=True)),
                (
                    "medical_data",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blood_biochem",
                        to="medical_analysis.medicaldata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SecurityLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("action", models.CharField(max_length=100)),
                ("details", models.TextField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("encryption_key", models.TextField(help_text="Зашифрованный индивидуальный ключ")),
                (
                    "language_preference",
                    models.CharField(choices=[("ru", "Русский"), ("en", "English")], default="ru", max_length=2),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="profile", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
    ]
