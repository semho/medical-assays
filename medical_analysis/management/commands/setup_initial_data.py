from django.core.management import BaseCommand
from django.contrib.auth.models import User
from pathlib import Path
from medical_analysis.models import UserProfile, SecurityLog


class Command(BaseCommand):
    help = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"

    def add_arguments(self, parser):
        parser.add_argument(
            "--create-admin",
            action="store_true",
            help="–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        )
        parser.add_argument(
            "--admin-username",
            type=str,
            default="admin",
            help="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        )
        parser.add_argument(
            "--admin-password",
            type=str,
            default="admin123",
            help="–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        )
        parser.add_argument(
            "--admin-email",
            type=str,
            default="admin@example.com",
            help="Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Medical MVP..."))

        # –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if options["create_admin"]:
            self.create_admin_user(options["admin_username"], options["admin_password"], options["admin_email"])

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        self.check_directories()

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤
        self.create_initial_logs()

        self.stdout.write(self.style.SUCCESS("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"))

    def create_admin_user(self, username, password, email):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        try:
            if not User.objects.filter(username=username).exists():
                admin_user = User.objects.create_superuser(username=username, email=email, password=password)

                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                UserProfile.objects.get_or_create(user=admin_user, defaults={"language_preference": "ru"})

                self.stdout.write(self.style.SUCCESS(f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {username}"))
            else:
                self.stdout.write(self.style.WARNING(f"‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}"))

    def check_directories(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
        from django.conf import settings

        directories = [
            Path(settings.MEDIA_ROOT),
            Path(settings.TEMP_UPLOAD_DIR),
            Path(settings.BASE_DIR) / "logs",
        ]

        for path in directories:
            if not path.exists():
                path.mkdir(parents=True, exist_ok=True)
                self.stdout.write(self.style.SUCCESS(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {path}"))
            else:
                self.stdout.write(self.style.SUCCESS(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}"))

    def create_initial_logs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö"""
        SecurityLog.objects.create(
            action="SYSTEM_INIT", details="–°–∏—Å—Ç–µ–º–∞ Medical MVP –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞", ip_address=None
        )

        self.stdout.write(self.style.SUCCESS("üìù –ù–∞—á–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã"))
